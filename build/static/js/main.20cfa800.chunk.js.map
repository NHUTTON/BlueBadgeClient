{"version":3,"sources":["helpers/environment.js","auth/Login.js","auth/Register.js","assets/Logo.png","auth/Auth.js","list/GamesCreate.js","list/ApiRequest.js","list/index.js","topBar/topBar.js","footer/footer.js","App.js","reportWebVitals.js","index.js"],"names":["APIURL","window","location","hostname","Login","props","console","log","useState","username","setUsername","password","setPassword","externalCloseBtn","className","style","position","top","right","color","onClick","toggleLoginOff","Modal","isOpen","toggle","toggleLogin","modalClassName","external","backgroundColor","ModalHeader","ModalBody","Form","onSubmit","event","preventDefault","length","alert","clearToken","newURL","fetch","method","body","JSON","stringify","user","headers","Headers","then","res","json","data","message","updateToken","sessionToken","FormGroup","Label","htmlFor","Input","name","value","onChange","e","target","Button","alignContent","Register","toggleSignUpOff","toggleSignUp","match","format","type","Auth","setIsOpen","login","setLogin","signUp","setSignUp","Navbar","light","expand","marginTop","NavbarBrand","src","Logo","alt","height","marginLeft","NavbarToggler","Collapse","navbar","Nav","marginRight","NavItem","size","border","borderRadius","url","GamesCreate","image","setImage","title","setTitle","date","setDate","initGenre","initPlatform","game","platform","setPlatform","genre","setGenre","useEffect","background_image","released","map","item","token","gameData","ApiFetch","search","setSearch","results","setResults","response","display","fontSize","textAlign","textShadow","placeholder","width","fontStyle","Container","paddingTop","Row","index","Card","borderColor","CardHeader","CardImg","CardBody","CardTitle","tag","CardText","genres","platforms","currentPlat","includes","Index","secret","TopBar","Footer","Col","float","paddingLeft","href","App","document","process","REACT_SERVER_PORT","setSessionToken","localStorage","getItem","undefined","newToken","setItem","clear","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2NAAIA,G,MAAS,IAEb,OAAOC,OAAOC,SAASC,UAEnB,IAAK,YAELH,EAAS,wBACT,MAEA,IAAK,iCAEDA,EAAS,sCAGFA,Q,+HCiDAI,EA1DD,SAACC,GACXC,QAAQC,IAAI,SAAUF,GADD,MAEWG,mBAAS,IAFpB,mBAEdC,EAFc,KAEJC,EAFI,OAGWF,mBAAS,IAHpB,mBAGdG,EAHc,KAGJC,EAHI,KAoCnBC,EAAmB,wBAAQC,UAAU,QAAQC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQC,MAAO,OAAQC,MAAM,SAAWC,QAASf,EAAMgB,eAArH,kBAEzB,OACI,eAACC,EAAA,EAAD,CAAOC,QAAQ,EAAMC,OAAQnB,EAAMoB,YAAaC,eAAe,cAAcC,SAAUd,EAAkBE,MAAO,CAACa,gBAAiB,WAAlI,UACI,cAACC,EAAA,EAAD,CAAad,MAAO,CAACI,MAAO,WAA5B,mBACA,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,SA/BI,SAACC,GAEvB,GADQA,EAAMC,iBACE,KAAbvB,GAAmBF,EAAS0B,OAAS,EACpCC,MAAM,kEACJ,CACF/B,EAAMgC,aAEN,IAAIC,EAAM,UAAMtC,EAAN,eAEVuC,MAAMD,EAAQ,CACVE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACC,KAAM,CAACnC,SAAUA,EAAUE,SAAUA,KAC3DkC,QAAS,IAAIC,QAAQ,CACjB,eAAgB,uBAGnBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACH5C,QAAQC,IAAI2C,GACZd,MAAMc,EAAKC,SACX9C,EAAM+C,YAAYF,EAAKG,mBAWvB,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,uBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,MAAOlD,EAAUmD,SAAU,SAACC,GAAD,OAAOnD,EAAYmD,EAAEC,OAAOH,aAElF,eAACL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,uBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,MAAOhD,EAAUiD,SAAU,SAACC,GAAD,OAAOjD,EAAYiD,EAAEC,OAAOH,aAElF,cAACI,EAAA,EAAD,CAAQhD,MAAO,CAACiD,aAAc,UAA9B,4BCUDC,EA9DE,SAAC5D,GAAW,IAAD,EACQG,mBAAS,IADjB,mBACjBC,EADiB,KACPC,EADO,OAEQF,mBAAS,IAFjB,mBAEjBG,EAFiB,KAEPC,EAFO,KAsClBC,EAAmB,wBAAQC,UAAU,QAAQC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQC,MAAO,OAAQC,MAAO,SAAWC,QAASf,EAAM6D,gBAAtH,kBAEzB,OACI,eAAC5C,EAAA,EAAD,CAAOC,QAAQ,EAAMC,OAAQnB,EAAM8D,aAAcxC,SAAUd,EAAkBC,UAAU,QAAvF,UACI,cAACe,EAAA,EAAD,CAAad,MAAO,CAACI,MAAO,SAA5B,qBACA,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,SAvCC,SAACC,GAEhB,GADAA,EAAMC,iBACW,KAAbvB,GAAmBF,EAAS0B,OAAS,IAAM1B,EAAS2D,MAAM/D,EAAMgE,QAChEjC,MAAM,iEACH,CACH/B,EAAMgC,aAEN,IAAIC,EAAM,UAAMtC,EAAN,kBAEVuC,MAAMD,EAAQ,CACVE,OAAO,OACPC,KAAMC,KAAKC,UAAU,CAACC,KAAM,CAACnC,SAAUA,EAAUE,SAAUA,KAC3DkC,QAAS,IAAIC,QAAQ,CACjB,eAAgB,uBAGnBC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACHd,MAAMc,EAAKC,SACX9C,EAAM+C,YAAYF,EAAKG,mBAoB3B,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,uBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,MAAOlD,EAAUmD,SAAU,SAACC,GAAD,OAAOnD,EAAYmD,EAAEC,OAAOH,UAC9E,4BAAG,6HAEP,eAACL,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,uBACA,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,MAAOhD,EAAUiD,SAAU,SAACC,GAAD,OAAOjD,EAAYiD,EAAEC,OAAOH,UAC9E,4BAAG,4EAEP,cAACI,EAAA,EAAD,CAAQO,KAAK,SAAb,qCC3DL,MAA0B,iCC6D1BC,EAhDF,SAAClE,GACVC,QAAQC,IAAI,QAASF,GADD,MAEQG,oBAAS,GAFjB,mBAEbe,EAFa,KAELiD,EAFK,OAGMhE,oBAAS,GAHf,mBAGbiE,EAHa,KAGNC,EAHM,OAIQlE,oBAAS,GAJjB,mBAIbmE,EAJa,KAILC,EAJK,KAOdP,EAAS,oDAMT5C,EAAc,kBAAMiD,GAAS,IAG7BP,EAAe,kBAAMS,GAAU,IAGrC,OACI,qCACI,eAACC,EAAA,EAAD,CAAQ1D,MAAM,QAAQ2D,OAAK,EAACC,OAAO,KAAKjE,UAAU,OAAOC,MAAO,CAACiE,UAAW,OAA5E,UACI,cAACC,EAAA,EAAD,UAAa,qBAAKC,IAAKC,EAAMC,IAAI,OAAOrE,MAAO,CAACsE,OAAQ,OAAQC,WAAY,WAC5E,cAACC,EAAA,EAAD,CAAenE,QAdZ,WACXoD,GAAWjD,MAcH,cAACiE,EAAA,EAAD,CAAUjE,OAAQA,EAAQkE,QAAM,EAAhC,SACI,eAACC,EAAA,EAAD,CAAK5E,UAAU,UAAU2E,QAAM,EAAC1E,MAAO,CAAC4E,YAAa,OAArD,UACI,cAACC,EAAA,EAAD,UACI,cAAC7B,EAAA,EAAD,CAAQO,KAAK,QAAQlD,QAASK,EAAaoE,KAAK,KAAK9E,MAAO,CAACa,gBAAiB,UAAWT,MAAO,UAAW2E,OAAQ,OAAQC,aAAc,OAAQJ,YAAa,OAA9J,qBAEJ,cAACC,EAAA,EAAD,UACI,cAAC7B,EAAA,EAAD,CAAQO,KAAK,QAAQlD,QAAS+C,EAAc0B,KAAK,KAAK9E,MAAO,CAACa,gBAAiB,UAAWT,MAAO,UAAW2E,OAAQ,OAAQC,aAAc,QAA1I,+BAMRtB,EACM,cAAC,EAAD,CAAOpC,WAAYhC,EAAMgC,WAAY2D,IAAK3F,EAAM2F,IAAK5C,YAAa/C,EAAM+C,YAAaiB,OAAQA,EAAQ5C,YAAaA,EAAaJ,eAvB9H,kBAAMqD,GAAS,IAuB+ID,MAAOA,IACtK,6BAGLE,EACC,cAAC,EAAD,aAAUtC,WAAYhC,EAAMgC,WAAY2D,IAAK3F,EAAM2F,IAAK5C,YAAa/C,EAAM+C,YAAaiB,OAAQA,EAAQF,aAAcA,EAAcD,gBAzB9H,kBAAMU,GAAU,IAyBgJD,OAAQA,GAA9K,SAA8LN,IAC9L,iC,6CCqBP4B,G,MAnEK,SAAC5F,GACnBC,QAAQC,IAAIF,GADiB,MAEDG,mBAAS,IAFR,mBAEpB0F,EAFoB,KAEbC,EAFa,OAGD3F,mBAAS,IAHR,mBAGpB4F,EAHoB,KAGbC,EAHa,OAIH7F,mBAAS,IAJN,mBAIpB8F,EAJoB,KAIdC,EAJc,OAKO/F,mBAAS,IALhB,mBAKpBgG,EALoB,aAMahG,mBAAS,KANtB,mBAMpBiG,EANoB,aAOCjG,mBAASH,EAAMqG,OAPhB,gCASKlG,mBAAS,KATd,mBASpBmG,EAToB,KASVC,EATU,OAUDpG,mBAAS,IAVR,mBAUpBqG,EAVoB,KAUbC,EAVa,KAe5BxG,QAAQC,IAAI2F,GACZ5F,QAAQC,IAAI6F,GACZ9F,QAAQC,IAAI+F,GACZhG,QAAQC,IAAIoG,GACZrG,QAAQC,IAAIsG,GAITvG,QAAQC,IAAIkG,GAKdM,qBAAU,WACNZ,EAAS9F,EAAMqG,KAAKM,kBACpBX,EAAShG,EAAMqG,KAAKhD,MACpB6C,EAAQlG,EAAMqG,KAAKO,YAGpB,IA4BH,OACE,cAAClD,EAAA,EAAD,CAAQ3C,QA3BW,SAACyC,GACpBvD,QAAQC,IAAI,YAfLkG,EAAaS,KAAI,SAAAC,GAAI,OAAIP,EAAY,GAAD,mBAAKH,GAAL,CAAmBU,EAAKR,SAASjD,WAIrE8C,EAAUU,KAAI,SAAAC,GAAI,OAAIL,EAAS,GAAD,mBAAKN,GAAL,CAAgBW,EAAKzD,WAc1DnB,MAAM,GAAD,OAAIvC,GAAU,CACjBwC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAC+D,KAAM,CAC1BR,MAAOA,EACPE,MAAOA,EACPE,KAAMA,EACNO,MAAOA,EACPF,SAAUA,KAEZ9D,QAAS,IAAIC,QAAQ,CACnB,eAAgB,mBAChB,cAAiBzC,EAAM+G,UAExBrE,MAAK,SAAAC,GAEN,OADA1C,QAAQC,IAAI,WACLyC,EAAIC,UAEZF,MAAK,SAACsE,GACL/G,QAAQC,IAAI8G,OAKd,8B,gECgCSC,EAlGE,SAACjH,GAAW,IAAD,EACIG,mBAAS,IADb,mBACjB+G,EADiB,KACTC,EADS,OAEMhH,mBAAS,IAFf,mBAEjBiH,EAFiB,KAERC,EAFQ,OAGElH,mBAAS,IAHX,gCAIEA,mBAAS,KAJX,gCAKAA,mBAAS,KALT,gCAMEA,mBAAS,KANX,gCAOQA,mBAAS,KAPjB,6BA+ExB,OAJAuG,qBAAU,WA5DNxE,MAAM,6EAAD,OAA8EgF,IAClFxE,MAAK,SAAA4E,GAAQ,OAAIA,EAAS1E,UAC1BF,MAAK,SAAAG,GACFwE,EAAWxE,EAAKuE,cA2DrB,CAACF,IAGA,gCACI,cAACxF,EAAA,EAAD,CAAMjB,UAAU,aAAhB,SACI,eAACwC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAOzC,UAAU,cAAcC,MAAO,CAAC6G,QAAQ,QAASC,SAAU,QAAQC,UAAU,SAAUC,WAAY,mBAA1G,SAA8H,yDAA2B,uBAA3B,cAC9H,qBAAKhH,MAAO,CAACsE,OAAQ,SACjB,cAAC5B,EAAA,EAAD,CAAO3C,UAAU,aAAakH,YAAY,SAASjH,MAAO,CAACkH,MAAM,OAAQjD,UAAU,MAAOkD,UAAW,SAAU/G,MAAO,UAAWS,gBAAiB,UAAWmE,aAAc,QAASD,OAAQ,QAASpC,KAAK,SAASC,MAAO4D,EAAQ3D,SAAU,SAACC,GAAD,OAAO2D,EAAU3D,EAAEC,OAAOH,eAGlR,cAACwE,EAAA,EAAD,CAAWpH,MAAO,CAACqH,WAAW,OAA9B,SACI,cAACC,EAAA,EAAD,CAAKvH,UAAU,UAAf,SAjED2G,EAAQP,KAAI,SAACR,EAAM4B,GACtB,OACI,8BACA,eAACC,EAAA,EAAD,CAAMxH,MAAO,CAAEa,gBAAiB,OAAQ4G,YAAa,UAAWxD,UAAU,OAA1E,UACA,cAACyD,EAAA,EAAD,CAAY3H,UAAU,aAAtB,SAAoC4F,EAAKhD,OACzC,cAACgF,EAAA,EAAD,CAASzH,KAAG,EAACgH,MAAM,OAAOnH,UAAU,YAAYoE,IAAKwB,EAAKM,iBAAkB5B,IAAI,mBAChF,eAACuD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAWC,IAAI,KAAK/H,UAAU,cAA9B,sBAAqD,uBAAM4F,EAAKO,YAChE,cAAC6B,EAAA,EAAD,UACI,oBAAGhI,UAAU,SAAb,oBAEI4F,EAAKqC,OAAO7B,KAAI,SAACL,EAAOyB,GACtB,GAAIA,EAAQ,EACV,OACI,2CAAMzB,EAAMnD,KAAZ,iBAOhB,cAACoF,EAAA,EAAD,UACE,oBAAGhI,UAAU,YAAb,uBAGwB,OAAnB4F,EAAKsC,UACFtC,EAAKsC,UAAU9B,KAAI,SAACP,EAAU2B,GAC9B,IAAIW,EAActC,EAASA,SAASjD,KACpC,GAAIuF,EAAYC,SAAS,SAAWD,EAAYC,SAAS,OAASD,EAAYC,SAAS,gBAAkBD,EAAYC,SAAS,aAAeD,EAAYC,SAAS,QAAUD,EAAYC,SAAS,YAAcD,EAAYC,SAAS,WAClO,OAEI,2CAAMD,EAAN,WASN3I,QAAQC,IAAI,2CAK/B,cAAC,EAAD,CAAamG,KAAMA,EAAMU,MAAO/G,EAAM+G,wBCtClC+B,EA7BD,SAAC9I,GAAW,IAAD,EACCG,mBAAS,IADV,mBAEpB4I,GAFoB,UAEd,iBAAa/I,EAAM+G,QAgB1B,OACI,8BACI,cAAC,EAAD,CAAUA,MAAOgC,OCKdC,EAtBA,SAAChJ,GAAW,IAAD,EACMG,oBAAS,GADf,mBACfe,EADe,KACPiD,EADO,KAOtB,OACI,eAACK,EAAA,EAAD,CAAQ1D,MAAM,QAAQ2D,OAAK,EAACC,OAAO,KAAnC,UACI,cAACE,EAAA,EAAD,UAAa,qBAAKC,IAAKC,EAAMC,IAAI,OAAOrE,MAAO,CAACsE,OAAQ,OAAQC,WAAY,WAC5E,cAACC,EAAA,EAAD,CAAenE,QAPR,WACXoD,GAAWjD,MAOP,cAACiE,EAAA,EAAD,CAAUjE,OAAQA,EAAQkE,QAAM,EAAhC,SACI,cAACC,EAAA,EAAD,CAAK5E,UAAU,UAAU2E,QAAM,EAA/B,SACI,cAACG,EAAA,EAAD,UACI,cAAC7B,EAAA,EAAD,CAAQ3C,QAASf,EAAMgC,WAAYwD,KAAK,KAAK9E,MAAO,CAACa,gBAAiB,UAAWT,MAAO,UAAW2E,OAAQ,OAAQC,aAAc,OAAQJ,YAAa,OAAtJ,8B,QCXT2D,EAZA,WACX,OACI,iCACI,cAACjB,EAAA,EAAD,CAAKtH,MAAO,CAACI,MAAO,SAApB,SACI,cAACoI,EAAA,EAAD,UACI,oBAAGxI,MAAO,CAACyI,MAAO,OAAQC,YAAa,OAAvC,sBAAwD,mBAAGC,KAAK,6BAA6B5F,OAAO,SAA5C,6BAAxD,KAAkI,mBAAG4F,KAAK,+BAA+B5F,OAAO,SAA9C,6BAAlI,KAA8M,mBAAG4F,KAAK,gCAAgC5F,OAAO,SAA/C,8BAA4E,uBAA1R,2BC8DL6F,MAvDf,WACEC,SAASnH,KAAK1B,MAAQ,sBACtB,IAAMiF,EAAG,UAAMhG,GAFF,GAIA,2BAAuB6J,mIAAYC,mBACZtJ,mBAAS,IALhC,gCAMmCA,oBAAS,IAN5C,gCAO2BA,mBAAS,KAPpC,mBAON6C,EAPM,KAOQ0G,EAPR,KAYbhD,qBAAU,WACJiD,aAAaC,QAAQ,eAA8CC,IAAlCF,aAAaC,QAAQ,UACxDF,EAAgBC,aAAaC,QAAQ,YAEtC,IAKH,IAAM7G,EAAc,SAAC+G,GACnBH,aAAaI,QAAQ,QAASD,GAC9BJ,EAAgBI,IAIZ9H,EAAa,WACjB2H,aAAaK,QACb/J,QAAQC,IAAI,gBAAiByJ,aAAaC,QAAQ,UAClDF,EAAgB,IAChBzJ,QAAQC,IAAI,qBAAsB8C,IAUpC,OACE,gCANAA,IAAiB2G,aAAaC,QAAQ,SACtC,cAAC,EAAD,CAAQ5H,WAAYA,IAAgB,cAAC,EAAD,CAAMA,WAAYA,EAAY2D,IAAKA,EAAK5C,YAAaA,IAOvF,uBACA,qBAAKrC,MAAO,CAACsE,OAAQ,SACrB,uBACA,cAAC,EAAD,IACA,uBACA,uBACA,cAAC,EAAD,QCrDSiF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzH,MAAK,YAAkD,IAA/C0H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BX,M","file":"static/js/main.20cfa800.chunk.js","sourcesContent":["let APIURL = '';\r\n\r\nswitch(window.location.hostname) {\r\n    //this is the local host name of your react app\r\n    case 'localhost' || '127.0.0.1':\r\n    //this is the local host name of your API\r\n    APIURL = 'http://localhost:5002';\r\n    break;\r\n    //this is the deployed react application\r\n    case 'nwh-rnggamingcli.herokuapp.com':\r\n        //this is the full url of your deployed API\r\n        APIURL = 'https://nwh-rnggaming.herokuapp.com'\r\n}\r\n\r\nexport default APIURL;\r\n\r\n\r\n/*\r\nANYTIME WE WANT TO DEPLOY WE MUST RUN FIRST:\r\n\r\nheroku create [name of app] --buildpack https://github.com/mars/create-react-app-buildpack.git\r\n*/","import React, {useState} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\n// import {useForm} from 'react-hook-form';\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst Login = (props) => {\r\n    console.log('login:', props);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    \r\n    //form validation\r\n\r\n    // const {register, handleSubmit} = useForm();\r\n    // const onSubmit = (data) => console.log(data);\r\n\r\n    //fetch to our server\r\n    let loginSubmit = (event) => {\r\n        event.preventDefault();\r\nif(password === \"\" || username.length < 4){\r\n    alert('Your username and password need to be filled in correctly.')\r\n}else {\r\n    props.clearToken();\r\n\r\n    let newURL = `${APIURL}/user/login`;\r\n\r\n    fetch(newURL, {\r\n        method: 'POST',\r\n        body: JSON.stringify({user: {username: username, password: password}}),\r\n        headers: new Headers({\r\n            'Content-Type': 'application/json',\r\n        })\r\n    })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n            alert(data.message);\r\n            props.updateToken(data.sessionToken);\r\n        })\r\n\r\n}\r\n}\r\nconst externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px', color:\"white\" }} onClick={props.toggleLoginOff}>&times;</button>;\r\n\r\nreturn(\r\n    <Modal isOpen={true} toggle={props.toggleLogin} modalClassName='modal-class' external={externalCloseBtn} style={{backgroundColor: \"#121212\"}}>\r\n        <ModalHeader style={{color: \"#292929\"}}>Login</ModalHeader>\r\n        <ModalBody>\r\n            <Form onSubmit={loginSubmit}>\r\n                <FormGroup>\r\n                    <Label htmlFor='username'>Username:</Label>\r\n                    <Input name='username' value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor='password'>Password:</Label>\r\n                    <Input name='password' value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </FormGroup>\r\n                <Button style={{alignContent: \"center\"}}>Login</Button>\r\n            </Form>\r\n        </ModalBody>\r\n    </Modal>\r\n)\r\n}\r\n\r\nexport default Login;","import React, {useState} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport APIURL from '../helpers/environment'\r\n\r\nconst Register = (props) => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // const [isOpen, setIsOpen] = useState(true);\r\n\r\n    let handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (password === \"\" || username.length < 4 || !username.match(props.format)){\r\n            alert('Your username and password need to meet the requirements.')\r\n        } else {\r\n            props.clearToken();\r\n\r\n            let newURL = `${APIURL}/user/register`;\r\n\r\n            fetch(newURL, {\r\n                method:'POST',\r\n                body: JSON.stringify({user: {username: username, password: password}}),\r\n                headers: new Headers({\r\n                    'Content-Type': 'application/json'\r\n                })\r\n            })\r\n                .then((res) => res.json())\r\n                .then((data) => {\r\n                    alert(data.message)\r\n                    props.updateToken(data.sessionToken);\r\n                });\r\n        }\r\n    }\r\n\r\n    //this conditional checks for special characters is in the username and password\r\n    const modalToggle = () => {\r\n        if (username.match(props.format) && username.length > 4 && password.length > 5) {\r\n            props.toggleSignUpOff();\r\n        } else {\r\n            console.log(\"Error: username or password is incorrect\")\r\n        }\r\n    }\r\n\r\n    const externalCloseBtn = <button className=\"close\" style={{ position: 'absolute', top: '15px', right: '15px', color: \"white\" }} onClick={props.toggleSignUpOff}>&times;</button>;\r\n\r\n    return(\r\n        <Modal isOpen={true} toggle={props.toggleSignUp} external={externalCloseBtn} className='Modal'>\r\n            <ModalHeader style={{color: \"black\"}}>Sign Up</ModalHeader>\r\n            <ModalBody>\r\n                <Form onSubmit={handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label htmlFor='username'>Username:</Label>\r\n                        <Input name='username' value={username} onChange={(e) => setUsername(e.target.value)}/>\r\n                        <p><i>Username must be at least 4 characters and include one (1) number or special character.</i></p>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label htmlFor='password'>Password:</Label>\r\n                        <Input name='password' value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                        <p><i>Password must be 5 or more characters.</i></p>\r\n                    </FormGroup>\r\n                    <Button type='submit'>Create Account</Button>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Register;","export default __webpack_public_path__ + \"static/media/Logo.10603d6a.png\";","import React, {useEffect, useState} from 'react';\r\nimport {Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    Collapse,\r\n    Nav,\r\n    NavItem,\r\n    Button} from 'reactstrap';\r\n\r\nimport Login from  './Login';\r\nimport Register from  './Register';\r\nimport Logo from '../assets/Logo.png';\r\n\r\nconst Auth = (props) => {\r\n    console.log('auth:', props);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [login, setLogin] = useState(false);\r\n    const [signUp, setSignUp] = useState(false);\r\n    \r\n\r\n    const format = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~1234567890]/;\r\n\r\n    const toggle = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const toggleLogin = () => setLogin(true);\r\n    const toggleLoginOff = () => setLogin(false);\r\n\r\n    const toggleSignUp = () => setSignUp(true);\r\n    const toggleSignUpOff = () => setSignUp(false);\r\n\r\n    return(\r\n        <>\r\n            <Navbar color='faded' light expand='md' className='Auth' style={{marginTop: \"1em\"}}>\r\n                <NavbarBrand><img src={Logo} alt='logo' style={{height: \"60px\", marginLeft: \"4em\"}}/></NavbarBrand>\r\n                <NavbarToggler onClick={toggle}/>\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className='ml-auto' navbar style={{marginRight: \"3em\"}}>\r\n                        <NavItem>\r\n                            <Button type='click' onClick={toggleLogin} size='lg' style={{backgroundColor: \"#BB86FC\", color: \"#292929\", border: \"none\", borderRadius: \"25px\", marginRight: \"2em\"}}>LOGIN</Button>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <Button type='click' onClick={toggleSignUp} size='lg' style={{backgroundColor: \"#BB86FC\", color: \"#292929\", border: \"none\", borderRadius: \"25px\"}}>SIGN UP</Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n                    {\r\n                    login \r\n                        ? <Login clearToken={props.clearToken} url={props.url} updateToken={props.updateToken} format={format} toggleLogin={toggleLogin} toggleLoginOff={toggleLoginOff} login={login}/> \r\n                        : <></>\r\n                    }\r\n\r\n                    {signUp \r\n                    ? <Register clearToken={props.clearToken} url={props.url} updateToken={props.updateToken} format={format} toggleSignUp={toggleSignUp} toggleSignUpOff={toggleSignUpOff} signUp={signUp} format={format}/> \r\n                    : <></>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Auth;","import React, {useState, useEffect} from 'react';\r\nimport { Media, Button, Form } from 'reactstrap';\r\nimport GamesTable from './GamesTable'\r\n\r\nimport APIURL from '../helpers/environment'\r\n /*\r\n\r\n This is submitting data from the API to the data base\r\n\r\n */\r\nconst GamesCreate = (props) => {\r\n  console.log(props)\r\n    const [image, setImage] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\");\r\n    const [date, setDate] = useState(\"\");\r\n    const [initGenre, setInitGenre] = useState([]);\r\n    const [initPlatform, setInitPlatform] = useState([]);\r\n    const [object, setObject] = useState(props.game)\r\n\r\n    const [platform, setPlatform] = useState([]);\r\n    const [genre, setGenre] = useState([]);\r\n\r\n    // console.log(object)\r\n   // console.log(initPlatform)\r\n \r\n   console.log(image)\r\n   console.log(title)\r\n   console.log(date)\r\n   console.log(platform)\r\n   console.log(genre)\r\n\r\n    const mapPlatform =  () => {\r\n      return initPlatform.map(item => setPlatform([...initPlatform, item.platform.name]))}\r\n      console.log(initPlatform)\r\n\r\n    const mapGenre =  () => {\r\n      return initGenre.map(item => setGenre([...initGenre, item.name]))}\r\n\r\n    useEffect(() => {\r\n        setImage(props.game.background_image);\r\n        setTitle(props.game.name);\r\n        setDate(props.game.released);\r\n        // setInitGenre(props.game.genres);\r\n        // setInitPlatform(props.game.platforms)\r\n    }, []);\r\n\r\n    const handleSubmit = (e) => {\r\n      console.log('hi there');\r\n      mapPlatform()\r\n      mapGenre()\r\n      fetch(`${APIURL}`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({game: {\r\n          image: image, \r\n          title: title, \r\n          date: date, \r\n          genre: genre, \r\n          platform: platform,\r\n        }}),\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json',\r\n          'Authorization': props.token\r\n        })\r\n      }).then(res =>{\r\n        console.log('hi nick')\r\n        return res.json()\r\n      })\r\n      .then((gameData) => {\r\n        console.log(gameData)\r\n      })\r\n    }\r\n\r\n    return(\r\n      <Button onClick={handleSubmit} >Add to my List</Button>\r\n    )\r\n}\r\n\r\nexport default GamesCreate;","import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input, Card, CardBody, CardTitle, CardText, CardImg, CardHeader, Container, Row, Col} from 'reactstrap';\r\nimport GamesCreate from './GamesCreate'\r\nimport GamesTable from './GamesTable'\r\n\r\nimport xbox from '../assets/xbox.png'\r\n\r\nconst ApiFetch = (props) => {\r\n    const [search, setSearch] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [image, setImage] = useState('')\r\n    const [title, setTitle] = useState('');\r\n    const [date, setDate] = useState('');\r\n    const [genre, setGenre] = useState([]);\r\n    const [platform, setPlatform] = useState([]);\r\n\r\n    const something = {\r\n\r\n    }\r\n    \r\n// console.log(results)\r\n    const fetchApi = () => {\r\n        fetch(`https://api.rawg.io/api/games?key=4205330c18e34b6ab39eec8889d15a01&search=${search}`)\r\n        .then(response => response.json())\r\n        .then(data =>  {\r\n            setResults(data.results)\r\n            // console.log(data)\r\n    })\r\n    }\r\n       \r\n    const mapResults =  () => {\r\n        return results.map((game, index) => {\r\n            return (\r\n                <div>\r\n                <Card style={{ backgroundColor: '#333', borderColor: '#BB86FC', marginTop:\"2em\"}}>\r\n                <CardHeader className='cardHeader'>{game.name}</CardHeader>\r\n                <CardImg top width=\"100%\" className='cardImage' src={game.background_image} alt=\"Card image cap\" />\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\" className=\"cardTitleh5\">Released:<br/>{game.released}</CardTitle>\r\n                    <CardText>\r\n                        <p className=\"genres\">Genres:  \r\n                        {\r\n                            game.genres.map((genre, index) => {\r\n                              if (index < 2) {\r\n                                return (\r\n                                    <> | {genre.name} | </>\r\n                                )\r\n                              }\r\n                            })\r\n                        }\r\n                        </p>\r\n                    </CardText>\r\n                    <CardText>\r\n                      <p className=\"platforms\">\r\n                        Platforms: \r\n                        {\r\n                          (game.platforms !== null)\r\n                            ? game.platforms.map((platform, index) => {\r\n                              let currentPlat = platform.platform.name;\r\n                              if (currentPlat.includes('Xbox') || currentPlat.includes('PC') || currentPlat.includes('Playstation') || currentPlat.includes('Nintendo') || currentPlat.includes('Wii') || currentPlat.includes('Genesis') || currentPlat.includes('Android')) {\r\n                                if (index < 2){\r\n                                  return (\r\n                                    <> | {currentPlat} |</>\r\n                                  )\r\n                                } else {\r\n                                  return (\r\n                                    <> | {currentPlat} |</>\r\n                                  )\r\n                                } \r\n                              }\r\n                            })\r\n                            : console.log('platforms is returning an error')\r\n                        }\r\n                      </p>\r\n                    </CardText>\r\n                </CardBody>\r\n           <GamesCreate game={game} token={props.token} />\r\n        </Card>\r\n        </div>\r\n            )\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        fetchApi()\r\n    }, [search])\r\n    \r\n    return (\r\n        <div>\r\n            <Form className=\"searchForm\">\r\n                <FormGroup>\r\n                    <Label className=\"searchLabel\" style={{display:\"block\", fontSize: \"3.2em\",textAlign:\"center\", textShadow: \"4px 4px #121212\"}}><i>SEARCH FOR YOUR FAVORITE<br/>GAMES!</i></Label>\r\n                    <div style={{height: \"8vh\"}}></div>\r\n                        <Input className=\"inputField\" placeholder=\"Search\" style={{width:\"45em\", marginTop:\"2em\", fontStyle: \"italic\", color: \"#A0A0A0\", backgroundColor: \"#121212\", borderRadius: \"100px\", border: \"none\"}} name='search' value={search} onChange={(e) => setSearch(e.target.value)}/>\r\n                </FormGroup>\r\n            </Form>\r\n            <Container style={{paddingTop:\"3em\",}}>\r\n                <Row className=\"divCont\">\r\n                {mapResults()}\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default ApiFetch;","import React, {useState, useEffect} from 'react';\r\n\r\n// import ListCreate from  './ListCreate'\r\n// import ListEdit from './ListEdit'\r\nimport List from './ListComponents/List'\r\nimport GamesDisplay from './GamesCreate';\r\nimport ApiFetch from './ApiRequest'\r\nimport GamesTable from './GamesTable'\r\n\r\nconst Index = (props) => {\r\nconst [games, setGames] = useState('')\r\n let secret = `Bearer ${props.token}`;\r\n\r\n const fetchGames = () => {\r\n    fetch('http://localhost:5002/games', {\r\n        method: 'GET',\r\n        headers: new Headers ({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': secret\r\n        })\r\n    }).then((res) => res.json())\r\n    .then((logData)=>{\r\n        console.log(logData)\r\n        setGames(logData)\r\n    })\r\n }\r\n\r\n    return(\r\n        <div>\r\n            <ApiFetch token={secret} />\r\n            {/* <GamesTable fetchGames={fetchGames} games={games} token={secret} /> */}\r\n            {/* <ListCreate />\r\n            <ListEdit /> */}\r\n            {/* <List /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index;","import React, {useState} from 'react';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    Collapse,\r\n    Nav,\r\n    NavItem,\r\n    Button\r\n} from 'reactstrap';\r\nimport Logo from '../assets/Logo.png';\r\n\r\nconst TopBar = (props) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    return (\r\n        <Navbar color='faded' light expand='md'>\r\n            <NavbarBrand><img src={Logo} alt='logo' style={{height: \"60px\", marginLeft: \"4em\"}}/></NavbarBrand>\r\n            <NavbarToggler onClick={toggle}/>\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className='ml-auto' navbar>\r\n                    <NavItem>\r\n                        <Button onClick={props.clearToken} size='lg' style={{backgroundColor: \"#BB86FC\", color: \"#292929\", border: \"none\", borderRadius: \"25px\", marginRight: \"2em\"}}>LOGOUT</Button>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default TopBar;","import React from \"react\";\r\nimport {Row, Col, NavLink} from \"reactstrap\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Row style={{color: \"white\"}}>\r\n                <Col>\r\n                    <p style={{float: \"left\", paddingLeft: \"2em\"}}>Made by: <a href=\"https://nhutton.github.io/\" target=\"_blank\">Nickolas Hutton</a>, <a href=\"https://turner344.github.io/\" target=\"_blank\">Turner Jimerson</a>, <a href=\"https://cjkalahiki.github.io/\" target=\"_blank\">Connor Kalahiki </a><br/> &copy; RnGaming</p>\r\n                </Col>\r\n            </Row>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react'\r\nimport './App.css';\r\nimport {\r\n  Route,\r\n  Link,\r\n  Switch\r\n} from 'react-router-dom'\r\n\r\nimport APIURL from './helpers/environment'\r\n\r\nimport Auth from './auth/Auth'\r\nimport  Index from './list/index'\r\nimport TopBar from './topBar/topBar'\r\nimport Footer from './footer/footer';\r\n\r\nfunction App() {  \r\n  document.body.style = 'background: #292929'\r\n  const url = `${APIURL}`\r\n\r\n  const baseURL = `http://localhost:${process.env.REACT_SERVER_PORT}`\r\n  const [activeList, setActiveList] = useState(0);\r\n  const [listGamesUpdated, setListGamesUpdated] = useState(false);\r\n  const [sessionToken, setSessionToken] = useState(''); \r\n\r\n  /*\r\n    this runs to update sessiontoken to the token found in local storage\r\n  */\r\n  useEffect(() => { //if a session token exists in local storage, set the sessionToken to that value so it can be passed down as a prop\r\n    if (localStorage.getItem('token') && localStorage.getItem('token') !== undefined) {\r\n      setSessionToken(localStorage.getItem('token'));\r\n    }\r\n  }, []);\r\n\r\n  /*\r\n    this saves the token in localStorage and in sessionToken\r\n  */\r\n  const updateToken = (newToken) => {\r\n    localStorage.setItem('token', newToken);\r\n    setSessionToken(newToken);\r\n    // console.log(sessionToken);\r\n  }\r\n  //this is the Logout functionality\r\n  const clearToken = () =>  {\r\n    localStorage.clear();\r\n    console.log('local storage', localStorage.getItem('token'));\r\n    setSessionToken('');\r\n    console.log('after clear token:', sessionToken);\r\n  }\r\n\r\n  const protectedViews = () => {\r\n    return ( \r\n    sessionToken === localStorage.getItem('token') ?\r\n    <TopBar clearToken={clearToken}/> : <Auth clearToken={clearToken} url={url} updateToken={updateToken}/>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {protectedViews()}\r\n      <br/>\r\n      <div style={{height: \"8vh\"}}></div>\r\n      <br/>\r\n      <Index />\r\n      <br/>\r\n      <br/>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;  \r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}